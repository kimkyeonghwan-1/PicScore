worker_processes auto;

events {
    worker_connections 1024;
}

http {
	# ✅ MIME 타입 포함 및 기본 콘텐츠 타입 설정
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # ✅ 백엔드 서버 정보 로깅
    log_format backend_info '$remote_addr - [$time_local] '
                            '"$request" $status '
                            'upstream: $upstream_addr ($upstream_status) '
                            'response_time: $upstream_response_time';

    access_log /var/log/nginx/access.log backend_info;

    # ✅ HTTP 요청을 HTTPS로 강제 리디렉션
    server {
        listen 80;
        server_name j12b104.p.ssafy.io;
        
        # ✅ Let's Encrypt 인증용 경로는 리디렉션 하지 않음
        location /.well-known/acme-challenge/ {
            root /var/www/html;
        }
        
        # ✅ 나머지 모든 요청은 HTTPS로 리디렉션
        location / {
            return 301 https://$host$request_uri;
        }
    }

    server {
        listen 443 ssl http2;
        server_name j12b104.p.ssafy.io;

        # ✅ SSL 인증서 설정
        ssl_certificate /etc/letsencrypt/live/j12b104.p.ssafy.io/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/j12b104.p.ssafy.io/privkey.pem;

        # ✅ SSL 설정 최적화
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;

        # ✅ HSTS 설정 (HTTPS 강제)
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        # ✅ 프론트엔드 정적 파일 요청 처리
        location / {
            proxy_pass http://frontend:80;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # ✅ Actuator API 프록시 (health, info, prometheus)
        location ~* ^/actuator/(health|info|prometheus)$ {
            proxy_pass http://backend:8080;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # ✅ API 요청 및 OAuth2 로그인 프록시 
        location ~ ^/(api|oauth2|login)/ {
            proxy_pass http://backend:8080;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cookie_domain backend j12b104.p.ssafy.io;
            
            # 쿠키 처리를 위한 설정 추가
            proxy_cookie_path / /;
            
            # 버퍼 설정 추가 (OAuth2 응답이 클 경우 대비)
            proxy_buffer_size 128k;
            proxy_buffers 4 256k;
            proxy_busy_buffers_size 256k;
            
            # CORS 헤더 추가
            add_header 'Access-Control-Allow-Origin' 'https://j12b104.p.ssafy.io' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization' always;
            
            # OPTIONS 요청 처리 (preflight 요청)
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' 'https://j12b104.p.ssafy.io' always;
                add_header 'Access-Control-Allow-Credentials' 'true' always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
                add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization' always;
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain charset=UTF-8';
                add_header 'Content-Length' 0;
                return 204;
            }
            
            # 모든 헤더 전달 보장
            proxy_pass_request_headers on;
        }
        
        # ✅ OAuth2 콜백 전용 처리 (필요한 경우 별도로 설정)
        location ~ ^/oauth2/callback/ {
            proxy_pass http://backend:8080;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # 쿠키 관련 설정
            proxy_cookie_domain backend j12b104.p.ssafy.io;
            proxy_cookie_path / /;
            
            # 버퍼 크기 증가
            proxy_buffer_size 128k;
            proxy_buffers 4 256k;
            proxy_busy_buffers_size 256k;
            
            # 타임아웃 증가 (OAuth 인증 처리 시간 고려)
            proxy_connect_timeout 90s;
            proxy_send_timeout 90s;
            proxy_read_timeout 90s;
        }
    }
}